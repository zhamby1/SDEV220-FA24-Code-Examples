#classes are kind of when we combine something like a dict and give it methods/functions
#what is a class - a class is a blueprint for an object that contains some data (attributes/fields) and functions(methods)

#functions and methods are pretty much the same thing.  Methods need an object to act on or are part of class... ie methods are functions that are build into a class

#instance - copy or spawn of a class.  Concrete manifestation that is generated by a class.  An object is very flexible in that can be made to look a variety of ways.

#objects are (often times) supposed to represent some type of concrete thing or real world object 

#to use a class we must first define it like a function
#define syntax - class classname

class Person:
    #attributes/fields
    name = "Zach"
    age = 39


#classes are like blueprints.  We can use variables within a class to act as a "master copy" that can be copied into outside objects/variables.  Everytime we create these copies, we call them instances or instantiating the class

instance1 = Person() #creates instance of person

#to access attributes or fields in a class we use dot notation (.)
print(instance1.name)
print(instance1.age)

#classes can be instantiated and then modified in order to suit your needs
instance2 = Person()
instance2.name = "Tim"
instance2.age = 45

print(instance2.name)
print(instance2.age)
